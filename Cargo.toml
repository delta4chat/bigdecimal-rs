[package]
name = "bigdecimal"
version = "0.4.8+dev"
authors = ["Andrew Kubera"]
description = "Arbitrary precision decimal numbers"
documentation = "https://docs.rs/bigdecimal"
homepage = "https://github.com/akubera/bigdecimal-rs"
repository = "https://github.com/akubera/bigdecimal-rs"
keywords = [
    "numerics",
    "bignum",
    "decimal",
    "arbitrary-precision",
]
categories = [ "mathematics", "science", "no-std" ]
license = "MIT/Apache-2.0"
autobenches = false
edition = "2015"

[lib]
crate-type = ["rlib", "staticlib", "cdylib"]
bench = false

[dependencies]
concat-idents = { version = "1.1.5", default-features = false }
libm = "0.2.6"
num-bigint = { version = "0.4.6", default-features = false }
num-integer = { version = "0.1.46", default-features = false }
num-traits = { version = "0.2.19", default-features = false }
once_cell = { version = "1.20.3", features = ["portable-atomic", "parking_lot"], optional = true }
portable-atomic = { optional = true, version = "1.10.0", default-features = false, features = ["fallback", "std"] }
scc2 = { optional = true, version = "2.4.1" }

#math-consts = { path = "../toolset/math-consts" }

serde = { version = "1.0.218", optional = true, default-features = false }
# Allow direct parsing of JSON floats, for full arbitrary precision
serde_json = { version = "1.0.139", optional = true, default-features = false, features = ["alloc", "arbitrary_precision"]}

[dev-dependencies]
paste = "1"
serde_test = "<1.0.176"
siphasher = { version = "0.3.10", default-features = false }
# The following dev-dependencies are only required for benchmarking
#   (use the `benchmark-bigdecimal` script to uncomment these and run benchmarks)
criterion = { version = "0.4", features = [ "html_reports" ] }
oorandom = { version = "11.1.3" }
lazy_static = { version = "1" }

# Only required for property testing - incompatible with older versions of rust
# PROPERTY-TESTS: proptest = "1"

[build-dependencies]
autocfg = "1"

[features]
default = ["std"]
serde-json = ["serde/derive", "serde_json"]
string-only = []
std = ["num-bigint/std", "num-integer/std", "num-traits/std", "dep:portable-atomic", "dep:scc2", "dep:once_cell"]

[[bench]]
name = "arithmetic"
harness = false

[lints.rust]
unexpected_cfgs = { level = "allow", check-cfg = ['cfg(no_track_caller)'] }
